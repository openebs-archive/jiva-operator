# Copyright 2020 The OpenEBS Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: build

on: ['push']

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Shellcheck
        uses: reviewdog/action-shellcheck@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          path: '.'
          pattern: '*.sh'
          exclude: './vendor/*'

  unit-tests:
    name: unit tests 
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.14
      uses: actions/setup-go@v2
      with:
        go-version: 1.14.7

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: verify license
      run: make license-check

    - name: verify dependencies
      run: make deps

    - name: verify tests
      run: make test

  e2e-tests:
    needs: ['unit-tests']
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        kubernetes: [v1.18.6]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Go 1.14
        uses: actions/setup-go@v2
        with:
          go-version: 1.14.7

      - name: Setup Minikube-Kubernetes
        uses: manusa/actions-setup-minikube@v2.3.0
        with:
          minikube version: v1.9.2
          kubernetes version: ${{ matrix.kubernetes }}
          github token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set tag
        run: |
          BRANCH="${GITHUB_REF##*/}"
          CI_TAG="ci"
          echo "TAG=${CI_TAG}" >> $GITHUB_ENV
          echo "BRANCH=${BRANCH}" >> $GITHUB_ENV

      - name: Build images locally
        run: make image.operator image.plugin || exit 1;

      - name: Install tests dependencies
        run: make bootstrap

      - name: Running tests
        run: |
          kubectl apply -f https://raw.githubusercontent.com/openebs/openebs/master/k8s/openebs-operator.yaml
          kubectl apply -f deploy/operator.yaml
          kubectl apply -f deploy/jiva-csi.yaml
          ./ci/ci.sh
          cd ./tests
          make tests

  csi-driver:
    runs-on: ubuntu-latest
    needs: ['lint', 'unit-tests', 'e2e-tests']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Tag
        run: |
          BRANCH="${GITHUB_REF##*/}"
          CI_TAG=${BRANCH#v}-ci
          if [ ${BRANCH} = "master" ]; then
            CI_TAG="ci"
          fi
          echo "TAG=${CI_TAG}" >> $GITHUB_ENV
          echo "BRANCH=${BRANCH}" >> $GITHUB_ENV

      - name: Print Tag info
        run: |
          echo "BRANCH: ${BRANCH}"
          echo "TAG: ${TAG}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: v0.5.1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Image
        run: make docker.buildx.csi-driver

  jiva-operator:
    runs-on: ubuntu-latest
    needs: ['lint', 'unit-tests', 'e2e-tests']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Tag
        run: |
          BRANCH="${GITHUB_REF##*/}"
          CI_TAG=${BRANCH#v}-ci
          if [ ${BRANCH} = "master" ]; then
            CI_TAG="ci"
          fi
          echo "TAG=${CI_TAG}" >> $GITHUB_ENV
          echo "BRANCH=${BRANCH}" >> $GITHUB_ENV

      - name: Print Tag info
        run: |
          echo "BRANCH: ${BRANCH}"
          echo "TAG: ${TAG}"


      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: v0.5.1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Image
        run: make docker.buildx.jiva-operator
