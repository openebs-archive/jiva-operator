# Copyright 2020 The OpenEBS Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: build

on:
  create:
  push:
    branches:
      - 'develop'
      - 'v*'
    paths-ignore:
      - '*.md'
      - 'changelogs/**'
      - 'deploy/helm/**'
      - 'docs/**'
      - 'LICENSE'
      - 'MAINTAINERS'

jobs:
  lint:
    # to ignore builds on release
    if: ${{ (github.event.ref_type != 'tag') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Shellcheck
        uses: reviewdog/action-shellcheck@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          path: '.'
          pattern: '*.sh'
          exclude: './vendor/*'

  unit-tests:
    # to ignore builds on release
    if: ${{ (github.event.ref_type != 'tag') }}
    name: unit tests 
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.17
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.6

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: verify license
      run: make license-check

    - name: verify dependencies
      run: make deps

    - name: verify tests
      run: make test

  e2e-tests:
    needs: ['unit-tests']
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.6

      - name: Setup Minikube-Kubernetes
        uses: manusa/actions-setup-minikube@v2.4.3
        with:
          minikube version: 'v1.24.0'
          kubernetes version: 'v1.21.0'
          github token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set tag
        run: |
          BRANCH="${GITHUB_REF##*/}"
          CI_TAG="ci"
          echo "TAG=${CI_TAG}" >> $GITHUB_ENV
          echo "BRANCH=${BRANCH}" >> $GITHUB_ENV

      - name: Build images locally
        run: make image.operator image.plugin || exit 1;

      - name: Install tests dependencies
        run: make bootstrap

      - name: Running tests
        run: |
          kubectl apply -f https://openebs.github.io/charts/hostpath-operator.yaml
          kubectl apply -f deploy/hostpath-sc.yaml
          kubectl apply -f deploy/jiva-operator.yaml
          ./ci/ci.sh
          cd ./tests
          make tests

  csi-driver:
    runs-on: ubuntu-latest
    needs: ['lint', 'unit-tests', 'e2e-tests']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Image Org
        # sets the default IMAGE_ORG to openebs
        run: |
          [ -z "${{ secrets.IMAGE_ORG }}" ] && IMAGE_ORG=openebs || IMAGE_ORG=${{ secrets.IMAGE_ORG }}
          echo "IMAGE_ORG=${IMAGE_ORG}" >> $GITHUB_ENV

      - name: Set Build Date
        id: date
        run: |
          echo "::set-output name=DATE::$(date -u +'%Y-%m-%dT%H:%M:%S%Z')"

      - name: Set Tag
        run: |
          BRANCH="${GITHUB_REF##*/}"
          CI_TAG=${BRANCH#v}-ci
          if [ ${BRANCH} = "develop" ]; then
            CI_TAG="ci"
          fi
          echo "TAG=${CI_TAG}" >> $GITHUB_ENV
          echo "BRANCH=${BRANCH}" >> $GITHUB_ENV
      
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          # add each registry to which the image needs to be pushed here
          images: |
            ${{ env.IMAGE_ORG }}/jiva-csi
            quay.io/${{ env.IMAGE_ORG }}/jiva-csi
            ghcr.io/${{ env.IMAGE_ORG }}/jiva-csi
          tag-latest: false
          tag-custom-only: true
          tag-custom: |
            ${{ env.TAG }}

      - name: Print Tag info
        run: |
          echo "BRANCH: ${BRANCH}"
          echo "${{ steps.docker_meta.outputs.tags }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: v0.5.1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Quay
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./build/jiva-csi/jiva-csi.Dockerfile
          push: true
          platforms: linux/amd64, linux/arm64
          tags: |
            ${{ steps.docker_meta.outputs.tags }}
          build-args: |
            DBUILD_DATE=${{ steps.date.outputs.DATE }}
            DBUILD_REPO_URL=https://github.com/openebs/jiva-operator
            DBUILD_SITE_URL=https://openebs.io
            BRANCH=${{ env.BRANCH }}

  jiva-operator:
    runs-on: ubuntu-latest
    needs: ['lint', 'unit-tests', 'e2e-tests']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Image Org
        # sets the default IMAGE_ORG to openebs
        run: |
          [ -z "${{ secrets.IMAGE_ORG }}" ] && IMAGE_ORG=openebs || IMAGE_ORG=${{ secrets.IMAGE_ORG }}
          echo "IMAGE_ORG=${IMAGE_ORG}" >> $GITHUB_ENV

      - name: Set Build Date
        id: date
        run: |
          echo "::set-output name=DATE::$(date -u +'%Y-%m-%dT%H:%M:%S%Z')"

      - name: Set Tag
        run: |
          BRANCH="${GITHUB_REF##*/}"
          CI_TAG=${BRANCH#v}-ci
          if [ ${BRANCH} = "develop" ]; then
            CI_TAG="ci"
          fi
          echo "TAG=${CI_TAG}" >> $GITHUB_ENV
          echo "BRANCH=${BRANCH}" >> $GITHUB_ENV

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          # add each registry to which the image needs to be pushed here
          images: |
            ${{ env.IMAGE_ORG }}/jiva-operator
            quay.io/${{ env.IMAGE_ORG }}/jiva-operator
            ghcr.io/${{ env.IMAGE_ORG }}/jiva-operator
          tag-latest: false
          tag-custom-only: true
          tag-custom: |
            ${{ env.TAG }}
      
      - name: Print Tag info
        run: |
          echo "BRANCH: ${BRANCH}"
          echo "${{ steps.docker_meta.outputs.tags }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: v0.5.1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Quay
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./build/jiva-operator/jiva-operator.Dockerfile
          push: true
          platforms: linux/amd64, linux/arm64
          tags: |
            ${{ steps.docker_meta.outputs.tags }}
          build-args: |
            DBUILD_DATE=${{ steps.date.outputs.DATE }}
            DBUILD_REPO_URL=https://github.com/openebs/jiva-operator
            DBUILD_SITE_URL=https://openebs.io
            BRANCH=${{ env.BRANCH }}

  ansible:
    runs-on: ubuntu-latest
    needs: ['unit-tests']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Image Org
        # sets the default IMAGE_ORG to openebs
        run: |
          [ -z "${{ secrets.IMAGE_ORG }}" ] && IMAGE_ORG=openebs || IMAGE_ORG=${{ secrets.IMAGE_ORG}}
          echo "IMAGE_ORG=${IMAGE_ORG}" >> $GITHUB_ENV
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push the ansible image
        uses: docker/build-push-action@v2
        with:
          file: ./e2e-tests/Dockerfile
          push: true
          load: false
          platforms: linux/amd64
          tags: |
            ${{ env.IMAGE_ORG }}/jiva-csi-e2e:ci            
